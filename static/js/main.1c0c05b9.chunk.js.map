{"version":3,"sources":["components/Text/style.js","components/Text/Text.js","hooks/usePeopleFetch.js","pages/style.js","components/Spinner/Spinner.js","components/CheckBox/style.js","components/CheckBox/CheckBox.js","components/CountriesList/CountriesList.js","components/User/style.js","context/FavoritesContext.js","components/User/User.js","pages/Home/Home.js","pages/Favorites/Favorites.js","theme/ThemeProvider.js","components/NavBar/NavBar.js","AppRouter.js","index.js"],"names":["Text","styled","div","size","bold","children","Typography","usePeopleFetch","useState","users","setUsers","isLoading","setIsLoading","pageNumber","setPageNumber","selectedCountries","setSelectedCountries","useEffect","fetchUsers","fetchUsersByCountry","response","axios","get","a","prev","list","push","data","results","handlerSelectedCountries","country","prevState","newArray","countryIndex","indexOf","splice","handlerNextPage","Home","Content","Header","SpinnerWrapper","Filters","Spinner","color","thickness","variant","CircularProgress","CheckBox","isChecked","onChange","label","value","FormControlLabel","control","Checkbox","checked","CountriesList","handle","code","name","map","countryCode","List","User","UserInfo","UserPicture","img","IconButtonWrapper","isVisible","FavoritesContext","React","createContext","updateFavorites","user","favoritesList","fetchFromStorage","item","login","uuid","itemIndex","saveInStorage","fetchFavorites","savedJSON","localStorage","getItem","JSON","parse","json","stringify","setItem","index","hoveredUserId","setHoveredUserId","ctx","useContext","onMouseEnter","handleMouseEnter","onMouseLeave","src","picture","large","alt","title","first","last","email","location","street","number","city","checkFavorite","IconButton","onClick","dataLength","length","next","hasMore","loader","endMessage","style","textAlign","refreshFunction","pullDownToRefresh","pullDownToRefreshThreshold","pullDownToRefreshContent","releaseToRefreshContent","Favorites","setFavoritesList","ThemeProvider","overrides","MuiTab","root","backgroundColor","theme","useMemo","createMuiTheme","palette","type","primary","main","error","CssBaseline","NavBar","setValue","AppBar","position","top","Tabs","_e","newValue","aria-label","indicatorColor","textColor","Tab","href","AppRouter","exact","path","component","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.1c0c05b9.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const Text = styled.div`\r\n  font-size: ${({ size }) => size};\r\n  font-weight: ${({ bold }) => (bold ? \"700\" : \"400\")};\r\n`;\r\n","import React from \"react\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport * as S from \"./style\";\r\n\r\nconst Text = ({ size = \"14px\", children, bold }) => {\r\n  return (\r\n    <Typography>\r\n      <S.Text size={size} bold={bold}>\r\n        {children}\r\n      </S.Text>\r\n    </Typography>\r\n  );\r\n};\r\n\r\nexport default Text;\r\n","import { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport const usePeopleFetch = () => {\r\n  const [users, setUsers] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [pageNumber, setPageNumber] = useState(1);\r\n  const [selectedCountries, setSelectedCountries] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetchUsers();\r\n  }, [pageNumber]);\r\n\r\n  useEffect(() => {\r\n    fetchUsersByCountry();\r\n  }, [selectedCountries]);\r\n\r\n  /**\r\n   * The function checks if the selected country is in the array.\r\n   *\r\n   * If yes removes it\r\n   * If not adds it to array.\r\n   *\r\n   * @param country gets the country code as a parameter\r\n   * (e.g.: \"CA\" for Canada or \"DE\" for Germania)\r\n   */\r\n  const handlerSelectedCountries = (country) => {\r\n    setSelectedCountries((prevState) => {\r\n      const newArray = [...prevState];\r\n      const countryIndex = newArray.indexOf(country);\r\n      if (countryIndex >= 0) {\r\n        newArray.splice(countryIndex, 1);\r\n      } else {\r\n        newArray.push(country);\r\n      }\r\n      return newArray;\r\n    });\r\n  };\r\n\r\n  const handlerNextPage = () => {\r\n    setPageNumber((prev) => {\r\n      return prev + 1;\r\n    });\r\n  };\r\n\r\n  const response = axios.get(\r\n    `https://randomuser.me/api/?results=25&page=${pageNumber}&nat=${selectedCountries}`\r\n  );\r\n\r\n  async function fetchUsers() {\r\n    setIsLoading(true);\r\n    const users = await response;\r\n    setIsLoading(false);\r\n    setUsers((prev) => {\r\n      const list = [];\r\n      list.push(...prev);\r\n      list.push(...users.data.results);\r\n      return list;\r\n    });\r\n  }\r\n\r\n  async function fetchUsersByCountry() {\r\n    setIsLoading(true);\r\n    const users = await response;\r\n    setIsLoading(false);\r\n    setUsers(() => {\r\n      const list = [];\r\n      list.push(...users.data.results);\r\n      return list;\r\n    });\r\n  }\r\n\r\n  return { users, isLoading, handlerSelectedCountries, handlerNextPage };\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const Home = styled.div`\r\n  display: flex;\r\n  height: 100vh;\r\n  align-items: center;\r\n  justify-content: center;\r\n  box-sizing: border-box;\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 100%;\r\n  padding-block-start: 100px;\r\n`;\r\n\r\nexport const Header = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nexport const Form = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 25px;\r\n  max-width: 400px;\r\n  width: 100%;\r\n`;\r\n\r\nexport const SpinnerWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const Filters = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  & > * {\r\n    margin-inline-end: 8px;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nconst Spinner = ({ size, color, thickness, variant }) => {\r\n  return (\r\n    <CircularProgress size={size} color={color} thickness={thickness} variant={variant} />\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","import styled from \"styled-components\";\r\n\r\nexport const CheckBox = styled.div``;\r\n","import React from \"react\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport * as S from \"./style\";\r\n\r\nconst CheckBox = ({ isChecked, onChange, label, value }) => {\r\n  const handleChange = () => {\r\n    onChange && onChange(value);\r\n  };\r\n  return (\r\n    <S.CheckBox>\r\n      <FormControlLabel\r\n        control={<Checkbox checked={isChecked} onChange={handleChange} color=\"primary\" />}\r\n        label={label}\r\n      />\r\n    </S.CheckBox>\r\n  );\r\n};\r\n\r\nexport default CheckBox;\r\n","import CheckBox from \"components/CheckBox\";\r\nimport React from \"react\";\r\n\r\nconst CountriesList = ({ handle }) => {\r\n  /**\r\n   *\r\n   * countries\r\n   * task 1, bonus - add another country (Netherlands)\r\n   * If you need to add another country you just need to add an object to array\r\n   *\r\n   */\r\n  const countries = [\r\n    { code: \"BR\", name: \"Brazil\" },\r\n    { code: \"AU\", name: \"Australia\" },\r\n    { code: \"CA\", name: \"Canada\" },\r\n    { code: \"DE\", name: \"Germany\" },\r\n    { code: \"NL\", name: \"Netherlands\" },\r\n  ];\r\n\r\n  return countries.map((country) => (\r\n    <CheckBox\r\n      value={country.code}\r\n      label={country.name}\r\n      onChange={(countryCode) => {\r\n        handle(countryCode);\r\n      }}\r\n    />\r\n  ));\r\n};\r\n\r\nexport default CountriesList;\r\n","import styled from \"styled-components\";\r\n\r\nexport const UserList = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const List = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 35px;\r\n  width: 500px;\r\n  margin-block-start: 30px;\r\n  overflow-y: auto;\r\n`;\r\n\r\nexport const User = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  gap: 16px;\r\n`;\r\n\r\nexport const UserInfo = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  width: 100%;\r\n  max-height: 128px;\r\n  gap: 2px;\r\n  overflow: hidden;\r\n`;\r\n\r\nexport const UserPicture = styled.img`\r\n  border-radius: 45%;\r\n`;\r\n\r\nexport const IconButtonWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  opacity: ${({ isVisible }) => (isVisible ? 1 : 0)};\r\n  transition: opacity 0.2s ease-in-out;\r\n`;\r\n\r\nexport const Filters = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  & > * {\r\n    margin-inline-end: 8px;\r\n  }\r\n`;\r\n","import React from \"react\";\r\n\r\nexport const FavoritesContext = React.createContext({\r\n  updateFavorites: (user) => {\r\n    const favoritesList = fetchFromStorage();\r\n\r\n    // We check if the favorite user has already been saved.\r\n    // If Yes, then delete it and finish execution\r\n    for (const item of favoritesList) {\r\n      if (item.login.uuid === user.login.uuid) {\r\n        const itemIndex = favoritesList.indexOf(item);\r\n        favoritesList.splice(itemIndex, 1);\r\n        saveInStorage(favoritesList);\r\n        return;\r\n      }\r\n    }\r\n\r\n    // If the user is not saved then we add it to the array and save\r\n    // new array in local storage\r\n    favoritesList.push(user);\r\n    saveInStorage(favoritesList);\r\n  },\r\n  fetchFavorites: () => {\r\n    return fetchFromStorage();\r\n  },\r\n});\r\n\r\nconst fetchFromStorage = () => {\r\n  const savedJSON = localStorage.getItem(\"favorites\");\r\n  if (savedJSON === null) {\r\n    return [];\r\n  } else {\r\n    return JSON.parse(savedJSON);\r\n  }\r\n};\r\n\r\nconst saveInStorage = (list) => {\r\n  const json = JSON.stringify(list);\r\n  localStorage.setItem(\"favorites\", json);\r\n};\r\n","import React, { useState, useContext } from \"react\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport * as S from \"./style\";\r\nimport Text from \"../Text\";\r\nimport { FavoritesContext } from \"context\";\r\n\r\nconst User = ({ user, index, fetchFavorites }) => {\r\n  const [hoveredUserId, setHoveredUserId] = useState();\r\n  const ctx = useContext(FavoritesContext);\r\n\r\n  const handleMouseEnter = (index) => {\r\n    setHoveredUserId(index);\r\n  };\r\n\r\n  const handleMouseLeave = () => {\r\n    setHoveredUserId();\r\n  };\r\n\r\n  /**\r\n   * Function checks if this user is favorite.\r\n   *\r\n   * This function is very bad for performance.\r\n   * Since we cannot make changes on the server,\r\n   * we have to use this function.\r\n   *\r\n   *\r\n   * If we could change the value on the server,\r\n   * we would have a favorite variable of the user.\r\n   * We would just gets its value and set our favorite icon.\r\n   *\r\n   *\r\n   * @param user help us check if user is favorite\r\n   * @returns boolean\r\n   */\r\n  const checkFavorite = (user) => {\r\n    const favoritesList = ctx.fetchFavorites();\r\n    for (const item of favoritesList) {\r\n      if (item.login.uuid === user.login.uuid) {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  };\r\n\r\n  return (\r\n    <S.List>\r\n      <S.User\r\n        key={index}\r\n        onMouseEnter={() => handleMouseEnter(index)}\r\n        onMouseLeave={handleMouseLeave}\r\n      >\r\n        <S.UserPicture src={user?.picture.large} alt=\"\" />\r\n        <S.UserInfo>\r\n          <Text size=\"22px\" bold>\r\n            {user?.name.title} {user?.name.first} {user?.name.last}\r\n          </Text>\r\n          <Text size=\"14px\">{user?.email}</Text>\r\n          <Text size=\"14px\">\r\n            {user?.location.street.number} {user?.location.street.name}\r\n          </Text>\r\n          <Text size=\"14px\">\r\n            {user?.location.city} {user?.location.country}\r\n          </Text>\r\n        </S.UserInfo>\r\n        <S.IconButtonWrapper isVisible={index === hoveredUserId || checkFavorite(user)}>\r\n          <IconButton>\r\n            <FavoriteIcon\r\n              color=\"error\"\r\n              onClick={() => {\r\n                ctx.updateFavorites(user);\r\n                if (fetchFavorites !== null) {\r\n                  fetchFavorites();\r\n                }\r\n              }}\r\n            />\r\n          </IconButton>\r\n        </S.IconButtonWrapper>\r\n      </S.User>\r\n    </S.List>\r\n  );\r\n};\r\n\r\nexport default User;\r\n","import React from \"react\";\r\nimport Text from \"components/Text\";\r\nimport { usePeopleFetch } from \"hooks\";\r\nimport * as S from \"../style\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport Spinner from \"../../components/Spinner\";\r\nimport CountriesList from \"../../components/CountriesList\";\r\nimport User from \"../../components/User\";\r\n\r\nconst Home = () => {\r\n  const {\r\n    users,\r\n    isLoading,\r\n    handlerSelectedCountries,\r\n    handlerNextPage,\r\n  } = usePeopleFetch();\r\n\r\n  return (\r\n    <S.Home>\r\n      <S.Content>\r\n        <S.Header>\r\n          <Text size=\"64px\" bold>\r\n            PplFinder\r\n          </Text>\r\n        </S.Header>\r\n        <S.Filters>\r\n          <CountriesList handle={handlerSelectedCountries} />\r\n        </S.Filters>\r\n        <InfiniteScroll\r\n          dataLength={users.length}\r\n          next={handlerNextPage}\r\n          hasMore={true}\r\n          loader={isLoading && <h4>Loading...</h4>}\r\n          endMessage={\r\n            <p style={{ textAlign: \"center\" }}>\r\n              <b>Yay! You have seen it all</b>\r\n            </p>\r\n          }\r\n          /**\r\n          Additional feature you can drag from top to bottom to refresh the list\r\n           */\r\n          refreshFunction={handlerSelectedCountries}\r\n          pullDownToRefresh\r\n          pullDownToRefreshThreshold={50}\r\n          pullDownToRefreshContent={\r\n            <h3 style={{ textAlign: \"center\" }}>&#8595; Pull down to refresh</h3>\r\n          }\r\n          releaseToRefreshContent={\r\n            <h3 style={{ textAlign: \"center\" }}>&#8593; Release to refresh</h3>\r\n          }\r\n        >\r\n          {users.map((user, index) => {\r\n            return <User user={user} index={index} fetchFavorites={null} />;\r\n          })}\r\n        </InfiniteScroll>\r\n        {isLoading && (\r\n          <S.SpinnerWrapper>\r\n            <Spinner color=\"primary\" size=\"45px\" thickness={6} variant=\"indeterminate\" />\r\n          </S.SpinnerWrapper>\r\n        )}\r\n      </S.Content>\r\n    </S.Home>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import Text from \"components/Text\";\r\nimport * as S from \"../style\";\r\nimport User from \"../../components/User\"\r\n\r\nimport React, { useContext, useState, useEffect } from \"react\";\r\nimport { FavoritesContext } from \"context\";\r\n\r\nconst Favorites = () => {\r\n  const ctx = useContext(FavoritesContext);\r\n  const [favoritesList, setFavoritesList] = useState([]);\r\n \r\n  useEffect(() => {\r\n    fetchFavorites();\r\n  }, []);\r\n\r\n  const fetchFavorites = () => {\r\n     setFavoritesList(() => {\r\n      return ctx.fetchFavorites();\r\n    });\r\n   };\r\n\r\n  return (\r\n    <S.Home>\r\n      <S.Content>\r\n        <S.Header>\r\n          <Text size=\"64px\" bold>\r\n            Favorites\r\n          </Text>\r\n        </S.Header>\r\n        {favoritesList.map((user, index) => {\r\n          return <User user={user} index={index}  fetchFavorites={fetchFavorites}/>;\r\n        })}\r\n      </S.Content>\r\n    </S.Home>\r\n  );\r\n};\r\n\r\nexport default Favorites;\r\n","import React from \"react\";\r\nimport { createMuiTheme, ThemeProvider as Provider } from \"@material-ui/core/styles\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\n\r\nconst ThemeProvider = ({ children }) => {\r\n  const overrides = {\r\n    MuiTab: {\r\n      root: {\r\n        backgroundColor: \"#303030\",\r\n      },\r\n    },\r\n  };\r\n  const theme = React.useMemo(\r\n    () =>\r\n      createMuiTheme({\r\n        overrides,\r\n        palette: {\r\n          type: \"dark\",\r\n          primary: {\r\n            main: \"#84ffff\",\r\n          },\r\n          error: {\r\n            main: \"#f06292\",\r\n          },\r\n        },\r\n      }),\r\n    []\r\n  );\r\n\r\n  return (\r\n    <Provider theme={theme}>\r\n      <CssBaseline />\r\n      {children}\r\n    </Provider>\r\n  );\r\n};\r\n\r\nexport default ThemeProvider;\r\n","import React, { useState } from \"react\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst NavBar = () => {\r\n  const [value, setValue] = useState(0);\r\n\r\n  const handleChange = (_e, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <AppBar position=\"static\" color=\"transparent\" style={{ position: \"fixed\", top: 0 }}>\r\n      <Tabs\r\n        value={value}\r\n        onChange={handleChange}\r\n        aria-label=\"Navigation\"\r\n        indicatorColor=\"primary\"\r\n        textColor=\"primary\"\r\n      >\r\n        <Tab label=\"Home\" index={0} href=\"/PplFinder/#\" />\r\n        <Tab label=\"Favorites\" index={1} href=\"/PplFinder/#/favorites\" />\r\n      </Tabs>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import React from \"react\";\r\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport { Home } from \"pages\";\r\nimport { Favorites } from \"pages\";\r\nimport { ThemeProvider } from \"theme\";\r\nimport NavBar from \"components/NavBar\";\r\n\r\nconst AppRouter = () => {\r\n  return (\r\n    <ThemeProvider>\r\n      <Router>\r\n        <NavBar />\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Home} />\r\n          <Route exact path=\"/favorites\" component={Favorites} />\r\n        </Switch>\r\n      </Router>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default AppRouter;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport AppRouter from \"AppRouter\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <AppRouter />\r\n  </BrowserRouter>,\r\n  document.querySelector(\"#root\")\r\n);\r\n"],"sourceRoot":""}